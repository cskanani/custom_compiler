
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BLOCK COMMA DECISION DQUOT ELSE END GOTO ID IF MCOMC MCOMS MESSAGE PROCESS PROCESSBODY PROCESSDEF SCOMS SEMICOLON SIGNAL START SYSTEM THEN UNCONDDECstart : sys sig pro prodefsys : SYSTEM ID idrsig : SIGNAL ID idr\n    | pro : PROCESS ID idr\n    | idr : COMMA ID idr\n    | SEMICOLONprodef : prodef PROCESSDEF ID START prodefd END\n    | prodefd : prodefd BLOCK prcb\n    | prodefd DECISION ifc thnc elsc\n    | prcb : ID START txt ENDifc : ID IF txtthnc : THEN txtelsc : ELSE txt\n    | txt : txt txtr\n    | txtr : ID\n    | COMMA\n    | SEMICOLON\n    | GOTO ID discarddiscard : discard discardr\n    | discardr : ID\n    | COMMA\n    | SEMICOLON\n    | GOTO ID'
    
_lr_action_items = {'IF':([27,],[32,]),'PROCESS':([3,5,7,9,16,17,],[-4,10,-8,-2,-3,-7,]),'GOTO':([31,32,33,35,36,37,38,39,40,41,42,44,46,47,48,49,51,52,53,],[-20,-20,-20,-20,43,43,43,43,-19,-23,-22,-21,-26,50,-29,-28,-27,-25,-30,]),'BLOCK':([21,22,28,30,31,34,35,36,39,40,41,42,44,45,46,47,48,49,51,52,53,],[-13,25,-11,-18,-20,-12,-20,-16,-17,-19,-23,-22,-21,-14,-26,-24,-29,-28,-27,-25,-30,]),'THEN':([26,32,37,40,41,42,44,46,47,48,49,51,52,53,],[31,-20,-15,-19,-23,-22,-21,-26,-24,-29,-28,-27,-25,-30,]),'DECISION':([21,22,28,30,31,34,35,36,39,40,41,42,44,45,46,47,48,49,51,52,53,],[-13,23,-11,-18,-20,-12,-20,-16,-17,-19,-23,-22,-21,-14,-26,-24,-29,-28,-27,-25,-30,]),'END':([21,22,28,30,31,33,34,35,36,38,39,40,41,42,44,45,46,47,48,49,51,52,53,],[-13,24,-11,-18,-20,-20,-12,-20,-16,45,-17,-19,-23,-22,-21,-14,-26,-24,-29,-28,-27,-25,-30,]),'COMMA':([4,12,13,14,31,32,33,35,36,37,38,39,40,41,42,44,46,47,48,49,51,52,53,],[8,8,8,8,-20,-20,-20,-20,42,42,42,42,-19,-23,-22,-21,-26,49,-29,-28,-27,-25,-30,]),'ELSE':([30,31,36,40,41,42,44,46,47,48,49,51,52,53,],[35,-20,-16,-19,-23,-22,-21,-26,-24,-29,-28,-27,-25,-30,]),'$end':([2,3,5,7,9,11,15,16,17,18,24,],[0,-4,-6,-8,-2,-10,-1,-3,-7,-5,-9,]),'SEMICOLON':([4,12,13,14,31,32,33,35,36,37,38,39,40,41,42,44,46,47,48,49,51,52,53,],[7,7,7,7,-20,-20,-20,-20,41,41,41,41,-19,-23,-22,-21,-26,48,-29,-28,-27,-25,-30,]),'SYSTEM':([0,],[1,]),'ID':([1,6,8,10,19,23,25,31,32,33,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,],[4,12,13,14,20,27,29,-20,-20,-20,-20,44,44,44,44,-19,-23,-22,46,-21,-26,51,-29,-28,53,-27,-25,-30,]),'PROCESSDEF':([3,5,7,9,11,15,16,17,18,24,],[-4,-6,-8,-2,-10,19,-3,-7,-5,-9,]),'START':([20,29,],[21,33,]),'SIGNAL':([3,7,9,17,],[6,-8,-2,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'txtr':([36,37,38,39,],[40,40,40,40,]),'prcb':([25,],[28,]),'txt':([31,32,33,35,],[36,37,38,39,]),'sig':([3,],[5,]),'elsc':([30,],[34,]),'prodef':([11,],[15,]),'sys':([0,],[3,]),'thnc':([26,],[30,]),'ifc':([23,],[26,]),'idr':([4,12,13,14,],[9,16,17,18,]),'discard':([46,],[47,]),'pro':([5,],[11,]),'prodefd':([21,],[22,]),'start':([0,],[2,]),'discardr':([47,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> sys sig pro prodef','start',4,'p_statment_s','cc',126),
  ('sys -> SYSTEM ID idr','sys',3,'p_statment_sys','cc',129),
  ('sig -> SIGNAL ID idr','sig',3,'p_statment_sig','cc',135),
  ('sig -> <empty>','sig',0,'p_statment_sig','cc',136),
  ('pro -> PROCESS ID idr','pro',3,'p_statment_pro','cc',145),
  ('pro -> <empty>','pro',0,'p_statment_pro','cc',146),
  ('idr -> COMMA ID idr','idr',3,'p_statment_idr','cc',154),
  ('idr -> SEMICOLON','idr',1,'p_statment_idr','cc',155),
  ('prodef -> prodef PROCESSDEF ID START prodefd END','prodef',6,'p_statment_prodef','cc',163),
  ('prodef -> <empty>','prodef',0,'p_statment_prodef','cc',164),
  ('prodefd -> prodefd BLOCK prcb','prodefd',3,'p_statment_prodefd','cc',172),
  ('prodefd -> prodefd DECISION ifc thnc elsc','prodefd',5,'p_statment_prodefd','cc',173),
  ('prodefd -> <empty>','prodefd',0,'p_statment_prodefd','cc',174),
  ('prcb -> ID START txt END','prcb',4,'p_statment_prcsb','cc',177),
  ('ifc -> ID IF txt','ifc',3,'p_statment_ifc','cc',188),
  ('thnc -> THEN txt','thnc',2,'p_statment_thnc','cc',199),
  ('elsc -> ELSE txt','elsc',2,'p_statment_elsc','cc',210),
  ('elsc -> <empty>','elsc',0,'p_statment_elsc','cc',211),
  ('txt -> txt txtr','txt',2,'p_statment_txt','cc',229),
  ('txt -> <empty>','txt',0,'p_statment_txt','cc',230),
  ('txtr -> ID','txtr',1,'p_statment_txtr','cc',233),
  ('txtr -> COMMA','txtr',1,'p_statment_txtr','cc',234),
  ('txtr -> SEMICOLON','txtr',1,'p_statment_txtr','cc',235),
  ('txtr -> GOTO ID discard','txtr',3,'p_statment_txtr','cc',236),
  ('discard -> discard discardr','discard',2,'p_discard','cc',248),
  ('discard -> <empty>','discard',0,'p_discard','cc',249),
  ('discardr -> ID','discardr',1,'p_discardr','cc',252),
  ('discardr -> COMMA','discardr',1,'p_discardr','cc',253),
  ('discardr -> SEMICOLON','discardr',1,'p_discardr','cc',254),
  ('discardr -> GOTO ID','discardr',2,'p_discardr','cc',255),
]
